{
  "dependencies": [
    {
      "name": "flatbuffers",
      "url": "https://github.com/google/flatbuffers/archive/refs/tags/v23.5.26.zip",
      "buildSource": "flatbuffers-23.5.26",
      "cmd": [
        {
          "type": "cmake",
          "source": ".",
          "options": {
            "common": {
              "FLATBUFFERS_BUILD_TESTS": "OFF",
              "FLATBUFFERS_BUILD_FLATC": "OFF"
            }
          }
        }
      ]
    },
    {
      "name": "crypto++",
      "url": "https://github.com/abdes/cryptopp-cmake/archive/refs/tags/CRYPTOPP_8_7_0.zip",
      "buildSource": "cryptopp-cmake-CRYPTOPP_8_7_0",
      "cmd": [
        {
          "type": "cmake",
          "source": ".",
          "options": {
            "common": {
              "CRYPTOPP_BUILD_TESTING": "OFF"
            }
          }
        }
      ]
    },
    {
      "name": "lua",
      "url": "https://github.com/lua/lua/archive/refs/tags/v5.4.4.zip",
      "buildSource": "lua-5.4.4",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/lua",
        "{COPY} LICENSE.txt *.c {{VENDOR_PROJECTS_DIR}}/lua",
        "{COPY} *.h {{VENDOR_INSTALL_DIR}}/include"
      ]
    },
    {
      "name": "glfw",
      "url": "https://github.com/glfw/glfw/releases/download/3.3.4/glfw-3.3.4.zip",
      "buildSource": "glfw-3.3.4",
      "cmd": [
        {
          "type": "cmake",
          "options": {
            "common": {
              "BUILD_SHARED_LIBS": "OFF",
              "GLFW_BUILD_TESTS": "OFF"
            }
          }
        }
      ]
    },
    {
      "name": "libktx",
      "url": "https://github.com/KhronosGroup/KTX-Software/archive/refs/tags/v4.0.0.zip",
      "buildSource": "KTX-Software-4.0.0",
      "cmd": [
        {
          "type": "cmake",
          "source": ".",
          "options": {
            "common": {
              "KTX_FEATURE_TESTS": "OFF",
              "KTX_FEATURE_TOOLS": "OFF",
              "KTX_FEATURE_VULKAN": "OFF",
              "KTX_FEATURE_KTX1": "OFF",
              "KTX_FEATURE_STATIC_LIBRARY": "ON",
              "CMAKE_BUILD_TYPE": "{{BUILD_MODE}}"
            }
          }
        }
      ]
    },
    {
      "name": "freetype",
      "url": "https://gitlab.freedesktop.org/freetype/freetype/-/archive/VER-2-12-1/freetype-VER-2-12-1.zip",
      "buildSource": "freetype-VER-2-12-1",
      "cmd": [
        {
          "type": "cmake",
          "options": {
            "common": {
              "FT_DISABLE_PNG": "TRUE",
              "FT_DISABLE_ZLIB": "TRUE",
              "FT_DISABLE_BZIP2": "TRUE",
              "FT_DISABLE_HARFBUZZ": "TRUE",
              "FT_DISABLE_BROTLI": "TRUE"
            }
          }
        }
      ]
    },
    {
      "name": "msdfgen",
      "url": "https://github.com/Chlumsky/msdfgen/archive/4e8ff2321ea9696801675c908a4822c4d8e71eb8.zip",
      "buildSource": "msdfgen-4e8ff2321ea9696801675c908a4822c4d8e71eb8",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/msdfgen",
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/msdfgen/core",
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/msdfgen/ext",
        "{COPY} msdfgen.h msdfgen-ext.h {{VENDOR_INSTALL_DIR}}/include/msdfgen",
        "{COPY} core/*.h core/*.hpp {{VENDOR_INSTALL_DIR}}/include/msdfgen/core",
        "{COPY} ext/*.h ext/*.hpp {{VENDOR_INSTALL_DIR}}/include/msdfgen/ext",
        "{COPY} core/*.cpp {{VENDOR_PROJECTS_DIR}}/msdfgen",
        "{COPY} ext/*.cpp {{VENDOR_PROJECTS_DIR}}/msdfgen"
      ]
    },
    {
      "name": "msdf-atlas-gen",
      "url": "https://github.com/Chlumsky/msdf-atlas-gen/archive/50d1a1c275e78ee08afafbead2a2d347aa26f122.zip",
      "buildSource": "msdf-atlas-gen-50d1a1c275e78ee08afafbead2a2d347aa26f122",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/msdf-atlas-gen",
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/msdf-atlas-gen",
        "{RM} msdf-atlas-gen/artery-font-export.cpp msdf-atlas-gen/image-encode.cpp",
        "{COPY} msdf-atlas-gen/*.cpp {{VENDOR_PROJECTS_DIR}}/msdf-atlas-gen",
        "{COPY} msdf-atlas-gen/*.h msdf-atlas-gen/*.hpp {{VENDOR_INSTALL_DIR}}/include/msdf-atlas-gen"
      ]
    },
    {
      "name": "physx",
      "url": "https://github.com/NVIDIAGameWorks/PhysX/archive/refs/heads/4.1.zip",
      "buildSource": "PhysX-4.1",
      "cmd": [
        {
          "type": "cmake",
          "source": "physx/source/compiler/cmake",
          "options": {
            "common": {
              "CMAKE_BUILD_TYPE": "{{BUILD_MODE}}",
              "PHYSX_ROOT_DIR": "{{SOURCE_DIR}}/physx",
              "NV_USE_DEBUG_WINCRT": "ON",
              "NV_USE_STATIC_WINCRT": "OFF",
              "PXSHARED_INSTALL_PREFIX": "{{VENDOR_INSTALL_DIR}}",
              "CMAKEMODULES_PATH": "{{SOURCE_DIR}}/externals/cmakemodules",
              "PX_ROOT_LIB_DIR": "lib",
              "PX_OUTPUT_LIB_DIR": "{{SOURCE_DIR}}/build",
              "PX_OUTPUT_BIN_DIR": "{{SOURCE_DIR}}/bin",
              "PXSHARED_PATH": "{{SOURCE_DIR}}/pxshared",
              "TARGET_BUILD_PLATFORM": "{{PLATFORM}}",
              "PX_GENERATE_STATIC_LIBRARIES": "ON"
            },
            "linux": {
              "CMAKE_CXX_FLAGS": "\"-Wno-restrict -Wno-class-memaccess -Wno-mismatched-new-delete -Wno-array-bounds -Wno-stringop-overread\""
            }
          }
        }
      ]
    },
    {
      "name": "googletest",
      "buildSource": "googletest-1.13.0",
      "url": "https://github.com/google/googletest/archive/refs/tags/v1.13.0.zip",
      "cmd": [
        {
          "type": "cmake",
          "options": {
            "common": {
              "gtest_force_shared_crt": "ON"
            }
          }
        }
      ]
    },
    {
      "name": "meshoptimizer",
      "buildSource": "meshoptimizer-0.18",
      "url": "https://github.com/zeux/meshoptimizer/archive/refs/tags/v0.18.zip",
      "cmd": [
        {
          "type": "cmake"
        }
      ]
    },
    {
      "name": "optick",
      "buildSource": "optick-1.3.3.0",
      "url": "https://github.com/bombomby/optick/archive/refs/tags/1.3.3.0.zip",
      "cmd": [
        {
          "type": "cmake",
          "options": {
            "common": {
              "OPTICK_USE_VULKAN": "ON"
            }
          }
        }
      ]
    },
    {
      "name": "dearimgui",
      "url": "https://github.com/ocornut/imgui/archive/4fdafef54f3946d628e24fe8c84d603a15fa4a6f.zip",
      "buildSource": "imgui-4fdafef54f3946d628e24fe8c84d603a15fa4a6f",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/imgui",
        "{COPY} LICENSE.txt *.cpp backends/imgui_impl_glfw.cpp misc/freetype/imgui_freetype.cpp {{VENDOR_PROJECTS_DIR}}/imgui",
        "{COPY} *.h backends/imgui_impl_glfw.h misc/freetype/imgui_freetype.h {{VENDOR_INSTALL_DIR}}/include"
      ]
    },
    {
      "name": "imguizmo",
      "url": "https://github.com/CedricGuillemet/ImGuizmo/archive/fbc3614abcc642de7f3868cc0d68a35503ca9a4e.zip",
      "buildSource": "ImGuizmo-fbc3614abcc642de7f3868cc0d68a35503ca9a4e",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/imguizmo",
        "{COPY} LICENSE ImGuizmo.cpp {{VENDOR_PROJECTS_DIR}}/imguizmo",
        "{COPY} ImGuizmo.h {{VENDOR_INSTALL_DIR}}/include"
      ]
    },
    {
      "name": "spirv-reflect",
      "url": "https://github.com/KhronosGroup/SPIRV-Reflect/archive/refs/tags/sdk-1.3.250.0.zip",
      "buildSource": "SPIRV-Reflect-sdk-1.3.250.0",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/spirv-reflect",
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/include/spirv/unified1",
        "{COPY} spirv_reflect.c {{VENDOR_PROJECTS_DIR}}/spirv-reflect",
        "{COPY} spirv_reflect.h {{VENDOR_INSTALL_DIR}}/include/spirv_reflect.h",
        "{COPY} include/spirv/unified1/spirv.h {{VENDOR_INSTALL_DIR}}/include/include/spirv/unified1"
      ]
    },
    {
      "name": "mikktspace",
      "url": "https://github.com/mmikk/MikkTSpace/archive/refs/heads/master.zip",
      "buildSource": "MikkTSpace-master",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/mikktspace",
        "{COPY} mikktspace.h {{VENDOR_INSTALL_DIR}}/include",
        "{COPY} mikktspace.c {{VENDOR_PROJECTS_DIR}}/mikktspace/mikktspace.c"
      ]
    },
    {
      "name": "volk",
      "buildSource": "volk-1.3.215",
      "url": "https://github.com/zeux/volk/archive/refs/tags/1.3.215.zip",
      "cmd": [
        "{MKDIR} {{VENDOR_PROJECTS_DIR}}/volk",
        "{COPY} volk.h {{VENDOR_INSTALL_DIR}}/include",
        "{COPY} volk.c {{VENDOR_PROJECTS_DIR}}/volk/volk.c"
      ]
    },
    {
      "name": "glm",
      "buildSource": "glm",
      "url": "https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip",
      "cmd": ["{COPY} glm {{VENDOR_INSTALL_DIR}}/include/glm"]
    },
    {
      "name": "tinygltf",
      "buildSource": "tinygltf-2.5.0",
      "url": "https://github.com/syoyo/tinygltf/archive/refs/tags/v2.5.0.zip",
      "cmd": [
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/tinygltf",
        "{COPY} tiny_gltf.h {{VENDOR_INSTALL_DIR}}/include/tinygltf"
      ]
    },
    {
      "name": "yaml-cpp",
      "buildSource": "yaml-cpp-yaml-cpp-0.7.0",
      "url": "https://github.com/jbeder/yaml-cpp/archive/refs/tags/yaml-cpp-0.7.0.zip",
      "cmd": [
        {
          "type": "cmake",
          "options": {
            "common": {
              "YAML_BUILD_SHARED_LIBS": "OFF",
              "YAML_CPP_BUILD_TOOLS": "OFF",
              "YAML_CPP_BUILD_TESTS": "OFF",
              "YAML_CPP_FORMAT_SOURCE": "OFF",
              "YAML_CPP_BUILD_CONTRIB": "OFF"
            },
            "linux": {
              "CMAKE_CXX_FLAGS": "\"-Wno-maybe-uninitialized\""
            }
          }
        }
      ]
    },
    {
      "name": "json",
      "buildSource": ".",
      "url": "https://github.com/nlohmann/json/releases/download/v3.9.1/include.zip",
      "cmd": [
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/json",
        "{COPY} single_include/nlohmann/json.hpp {{VENDOR_INSTALL_DIR}}/include/json"
      ]
    },
    {
      "name": "vma",
      "buildSource": "VulkanMemoryAllocator-3.0.1",
      "url": "https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/archive/refs/tags/v3.0.1.zip",
      "cmd": [
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/vma",
        "{COPY} include/vk_mem_alloc.h {{VENDOR_INSTALL_DIR}}/include/vma"
      ]
    },
    {
      "name": "stb-image",
      "buildSource": "stb-master",
      "url": "https://github.com/nothings/stb/archive/refs/heads/master.zip",
      "cmd": [
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/stb",
        "{COPY} stb_image.h {{VENDOR_INSTALL_DIR}}/include/stb"
      ]
    },
    {
      "name": "miniaudio",
      "buildSource": "miniaudio-master",
      "url": "https://github.com/mackron/miniaudio/archive/refs/heads/master.zip",
      "cmd": [
        "{MKDIR} {{VENDOR_INSTALL_DIR}}/include/miniaudio",
        "{COPY} miniaudio.h {{VENDOR_INSTALL_DIR}}/include/miniaudio"
      ]
    }
  ]
}
